{
  "_args": [
    [
      {
        "raw": "mongo-uuid",
        "scope": null,
        "escapedName": "mongo-uuid",
        "name": "mongo-uuid",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/bb/projects/LoanFree/service"
    ]
  ],
  "_from": "mongo-uuid@latest",
  "_id": "mongo-uuid@1.0.0",
  "_inCache": true,
  "_location": "/mongo-uuid",
  "_nodeVersion": "8.1.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mongo-uuid-1.0.0.tgz_1497714922498_0.209598169894889"
  },
  "_npmUser": {
    "name": "thomas-jensen",
    "email": "thomas@src.agency"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mongo-uuid",
    "scope": null,
    "escapedName": "mongo-uuid",
    "name": "mongo-uuid",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongo-uuid/-/mongo-uuid-1.0.0.tgz",
  "_shasum": "a35f70ab3db15edd3120b0cd088fbdd60a5d8b97",
  "_shrinkwrap": null,
  "_spec": "mongo-uuid",
  "_where": "/Users/bb/projects/LoanFree/service",
  "author": {
    "name": "Thomas Jensen",
    "email": "thomas@src.agency",
    "url": "http://src.agency"
  },
  "bugs": {
    "url": "https://github.com/srcagency/mongo-uuid/issues"
  },
  "dependencies": {
    "get-port-cli": "^1.1.0",
    "uuid": "^3.1.0"
  },
  "description": "When saving a UUID in MongoDB, you probably want to save the binary data in their native format. This helper is meant to ease that.",
  "descriptor": "Simple helper for working with UUID in MongoDB",
  "devDependencies": {
    "bluebird": "^3.5.0",
    "mongodb": "^2.2.28",
    "tape": "^4.6.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-c2V+DaL3Elg+Nqc7ONj+W31abgkkZim1R7/pTfKJIDlTpWtF0tm1zPpZ39eSc8hIX/auTBcYonwyl04G6nrs/A==",
    "shasum": "a35f70ab3db15edd3120b0cd088fbdd60a5d8b97",
    "tarball": "https://registry.npmjs.org/mongo-uuid/-/mongo-uuid-1.0.0.tgz"
  },
  "gitHead": "a2137f0a7d656a66537a959b73b691dc42b94ca7",
  "homepage": "https://github.com/srcagency/mongo-uuid#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "thomas-jensen",
      "email": "thomas@src.agency"
    }
  ],
  "name": "mongo-uuid",
  "optionalDependencies": {},
  "readme": "# Mongo UUID\n\nWhen saving a UUID in MongoDB, you probably want to save the binary data in\ntheir native format. This helper is meant to ease that.\n\n```js\nconst m = require('mongodb')\t// \"mongodb-core\" or \"bson\" work as well\nconst u = require('mongo-uuid')\n\nconst uuid = i => u(m.Binary, i)\n\nconst id = uuid()\n// -> Binary\n\nconsole.log(u.stringify(id))\n// -> fa4aab39-bdd8-406c-9813-6206433912e9\n\nuuid('fa4aab39-bdd8-406c-9813-6206433912e9')\n// -> Binary\n```\n\n## API\n\n`Binary` should be the Binary constructor from the BSON package.\n\n### Create\n\n```js\nu.create(Binary)\nu(Binary)\n```\n\n### Parse\n\n```js\nu.parse(Binary, 'dcc090ea-a65b-4ea4-9d91-22310bdad8af')\nu(Binary, 'dcc090ea-a65b-4ea4-9d91-22310bdad8af')\n```\n\nParse might throw a `ParseError`. The error class is exposed as `u.ParseError`\nfor recognizing and catching.\n\n### Stringify\n\n```js\nu.stringify(uuid)\t// dcc090ea-a65b-4ea4-9d91-22310bdad8af\n```\n\n### Is valid\n\nCheck if the input is a valid UUID string without throwing.\n\n```js\nu.isValid('dcc090ea-a65b-4ea4-9d91-22310bdad8af')\t// true\n```\n\n## Examples\n\n```js\nconst { join } = require('bluebird')\nconst { Binary, connect } = require('mongodb')\nconst uuid = require('mongo-uuid')\n\nconst uuid = i => u(Binary, i)\n\nconst db = connect('mongodb://localhost:27017/myproject')\n\n// Creating documents\n\nconst id = uuid()\n\nconst insert = db.then(\n\tdb => db.collection('docs').insertOne({\n\t\t_id: id,\n\t})\n).then(\n\t() => console.log('Inserted with ID', uuid.stringify(id))\n)\n\n\n// Finding documents\n\nconst id = uuid('dcc090ea-a65b-4ea4-9d91-22310bdad8af')\n\njoin(db, insert,\n\tdb => db.collection('docs').find({\n\t\t_id: id,\n\t}).limit(1).next()\n).then(console.log)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/srcagency/mongo-uuid.git"
  },
  "scripts": {
    "test": "export MONGODB_PORT=$(get-port); npm run test:mongod:start && node test; npm run test:mongod:stop",
    "test:mongod:start": "mongod --port=$MONGODB_PORT --dbpath $(mktemp -d) --fork --pidfilepath=\"$(pwd)/.mongodpid\" --logpath /dev/null",
    "test:mongod:stop": "pidfile=\"$(pwd)/.mongodpid\" && kill $(cat \"$pidfile\") && rm \"$pidfile\""
  },
  "version": "1.0.0"
}
